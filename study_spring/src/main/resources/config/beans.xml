<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">

	<context:annotation-config></context:annotation-config>
	
	<!-- component scan 설정 -->
	<context:component-scan base-package="co.kr.ucs.spring" />
	<context:property-placeholder location="classpath:config/db.properties"/> 
		
	<!-- DataSource 설정 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass" value="${db.driverClass}"/>
		<property name="url" value="${db.url}"/>
		<property name="username" value="${db.username}"/>
		<property name="password" value="${db.password}"/>
	</bean>
	
	<!-- mybatis-spring 설정 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource"  ref="dataSource" />
		<property name="configLocation"   value="classpath:/config/SqlMapConfig.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:/config/sqlmap/login_ora.xml</value>
				<value>classpath:/config/sqlmap/board_ora.xml</value>
			</list>
		</property>
	</bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/sign/**" />
			<bean id="commonIntercepter" class="co.kr.ucs.spring.intercepter.CommonIntercepter" />
		</mvc:interceptor>
	</mvc:interceptors>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory" />
	</bean>
	
	<!-- annotation 기반 AOP 설정 -->
	<aop:aspectj-autoproxy />
	
	<aop:config>
		<aop:aspect id="performanceAspect" ref="performanceAdvice">
			<aop:around pointcut="execution(public * co.kr.ucs.spring.service..*(..)))" method="trace" />
			<!-- 메서드 호출 이전, 이후 예외발생 등 모든 시점에 적용가능한 어드바이스를 정의한다 -->
		</aop:aspect>
	</aop:config>
	
	<aop:config>
		<aop:pointcut expression="execution(public * co.kr.ucs.spring.service..*(..)))"
			id="serviceTx" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceTx" />		
	</aop:config>
	
	<!-- Advice 클래스를 Bean으로 등록 -->
	<bean id="performanceAdvice" class="co.kr.ucs.spring.aop.PerformanceAdvice" />
	
	<!-- Transaction 설정하기 --> <!-- Transaction Manager 설정 commit, rollback -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean> 
	
	<!-- Transaction 대상 설정 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" rollback-for="RuntimeException" />
			<tx:method name="write*" rollback-for="RuntimeException" />
			<tx:method name="add*" rollback-for="RuntimeException" />
			<tx:method name="create*" rollback-for="RuntimeException" />
			<tx:method name="regist*" rollback-for="RuntimeException" />
			<tx:method name="set*" rollback-for="RuntimeException" />
			<tx:method name="update*" rollback-for="RuntimeException" />
			<tx:method name="modify*" rollback-for="RuntimeException" />
			<tx:method name="edit*" rollback-for="RuntimeException" />
			<tx:method name="change*" rollback-for="RuntimeException" />
			<tx:method name="delete*" rollback-for="RuntimeException" />
			<tx:method name="remove" rollback-for="RuntimeException" />
			<tx:method name="terminate*" rollback-for="RuntimeException" />
			<tx:method name="read*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="get*" read-only="true" />
		</tx:attributes>
	</tx:advice>
</beans>